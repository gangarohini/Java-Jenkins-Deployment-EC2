    pipeline {
    agent {
        docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
    }
    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/gangarohini/Java-Jenkins-Deployment-EC2'
            }
        }

        stage('Build and Package') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t rohiniganga/docker-jenkins .'
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([string(credentialsId: 'DockerHubCreds', variable: 'DockerHub')]) {
                    sh 'docker login -u rohiniganga -p ${DockerHub}'
                  //  sh "docker push registry.hub.docker.com/rohiniganga/docker-jenkins:latest"
                }
            }
      }

       // stage('Deploy to Docker') {
           // steps {
              //  sh 'docker stop docker-jenkins || true'
             //   sh 'docker rm docker-jenkins || true'
              //  sh 'docker run -d --name your-docker-container-name your-docker-image-name:latest'
         //   }
      //  }
    }
}

